name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      py: ${{ steps.set.outputs.python }}
    steps:
      - uses: actions/checkout@v4
      - id: set
        run: echo "python=3.12" >> "$GITHUB_OUTPUT"

  lint:
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install deps
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -e ".[api,test,dev,security,docs]" || pip install -e .
      - name: Auto-format (ruff+black+isort)
        run: |
          ruff check . --fix
          black .
          isort .
      - name: Auto-commit formatting
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style(fmt): auto-format via CI (ruff/black/isort)"
          commit_user_name: bot-ci
          commit_user_email: bot@example.com
      - name: Ruff (verify)
        run: ruff check .
      - name: Black (verify)
        run: black --check .
      - name: isort (verify)
        run: isort --check-only .

  typecheck:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true   # зробимо advisory, поки код не стабілізовано
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install mypy
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -e ".[api,test,dev,security,docs]" || pip install -e .
          pip install mypy types-requests
      - name: mypy
        run: mypy -p cognitive_core || mypy . || true

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install project + test extras
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -e ".[api,test,dev,security,docs]" || pip install -e .
      - name: Run tests
        run: |
          pytest --cov --cov-report=xml --cov-report=term-missing
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  security:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true   # артефакти збираємо, але поки не блокуємо
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install sec tools
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -e ".[api,test,dev,security,docs]" || pip install -e .
          pip install bandit pip-audit
      - name: Bandit (json)
        run: bandit -r . -f json -o bandit.json || true
      - name: pip-audit (json)
        run: pip-audit -f json -o security-findings.json || true
      - name: Upload security findings
        uses: actions/upload-artifact@v4
        with:
          name: security-findings
          path: |
            bandit.json
            security-findings.json

  docs:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Build docs (if configured)
        run: |
          python -m pip install -U pip
          pip install -e ".[api,test,dev,security,docs]" || pip install -e .
          if [ -f "mkdocs.yml" ]; then mkdocs build --strict; else echo "no mkdocs.yml"; fi
