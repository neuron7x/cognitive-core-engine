[build-system]
requires = ["setuptools>=68,<70", "wheel>=0.43,<1"]
build-backend = "setuptools.build_meta"

[project]
name = "cognitive-core-engine"
version = "0.1.0"
description = "Core engine with API, CLI, plugins, tests and CI"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pydantic>=2.7,<3.0",
    "pydantic-settings>=2.0,<3.0",
    "typing-extensions>=4.8,<5.0",
    "fastapi>=0.111,<0.120",
    "uvicorn>=0.29,<0.36",
    "httpx>=0.25,<0.29",
]

[project.optional-dependencies]
api = [
    "httpx>=0.25,<0.29",
    "prometheus-client>=0.20,<0.21",
    "opentelemetry-sdk>=1.24,<2.0",
]
test = [
    "pytest>=7.4,<8.0",
    "pytest-cov>=4.1,<5.0",
    "httpx>=0.25,<0.29",
    "hypothesis>=6.99,<7.0",
    "pyyaml>=6.0.1,<7.0",
    "alembic>=1.13,<2.0",
]
dev = [
    "ruff>=0.5.0,<0.6",
    "black>=24.4,<25.0",
    "isort>=5.13,<6.0",
    "mypy>=1.8,<2.0",
    "types-requests>=2.31.0.6,<3.0",
]
docs = [
    "mkdocs>=1.6,<2.0",
    "mkdocs-material>=9.5,<10.0",
    "pymdown-extensions>=10.8,<11.0",
    "mkdocs-mermaid2-plugin>=1.1,<2.0",
]

[project.scripts]
cogctl = "cognitive_core.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ["py310","py311","py312"]

[tool.isort]
profile = "black"
line_length = 100
combine_as_imports = true
known_first_party = ["cognitive_core"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E","F","I"]
ignore = ["E203","E266","E501","F401","F841"]
src = ["src","."]

[tool.pytest.ini_options]
addopts = "-q -ra --strict-markers --disable-warnings --maxfail=1"
testpaths = ["tests"]
markers = ["integration: hits real app"]
