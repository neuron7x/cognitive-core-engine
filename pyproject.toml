[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cognitive-core-engine"
version = "0.1.0"
description = "Core engine for cognitive services (API + CLI)."
readme = "README.md"
requires-python = ">=3.11"
authors = [{name = "neuron7x"}]
license = {text = "MIT"}
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Framework :: FastAPI",
  "License :: OSI Approved :: MIT License",
]

dependencies = [
  "fastapi>=0.111",
  "uvicorn[standard]>=0.30",
  "prometheus-client>=0.20",
]

[project.optional-dependencies]
api = ["fastapi>=0.111", "uvicorn[standard]>=0.30", "prometheus-client>=0.20"]
cli = ["typer>=0.12"]
dev = [
  "ruff>=0.6",
  "black>=24.3",
  "isort>=5.13",
  "mypy>=1.10",
  "types-requests",
  "types-PyYAML",
]
security = ["bandit>=1.7", "pip-audit>=2.7"]
docs = ["mkdocs>=1.6", "mkdocs-material>=9.5"]
test = [
  "pytest>=8.3",
  "pytest-cov>=5.0",
  "httpx>=0.27",
  "requests>=2.32",
  "fastapi[test]",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
  "E", "F", "I", "W",
  "B",
  "UP",
  "S",
]
ignore = ["S101"]
exclude = ["legacy", "alembic"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q --disable-warnings --maxfail=1 --cov=cognitive_core --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src/cognitive_core"]
